ВВЕДЕНИЕ
	Для сглаживающего фильтра существует оптимизированная однопоточная версия, позволяющая ускорить его работу по сравнению в наивной реализацией, созданной в предыдущем задании - быстрое скользящее среднее (БСС, плавающее среднее).
	Проблема: при вычислении средних значений для окрестностей соседних пикселей, большая часть слагаемых будет совпадать и множество раз будут складываться одни и те же яркости.
	
--------------------------------------------------------------------------------------------
	БСС позволяет избежать повторного суммирования одних и тех же яркостей при выполнении срединной фильтрации путём следующего оптимизированного накопления сумм в дополненной пикселями строке:
1. Для первого исходного (не дополненного) пикселя строки находится сумма яркостей в одномерном окне из k пикселей; обозначим эту сумму как S(0):
	
	S(0) = Sum(I(i)); i = -k/2..k/2.
	
2. Суммы для последующих пикселей изображения находятся путём вычисления разности из суммы предыдущего пикселя яркости предыдущего пикселя, который не попадает в окно нового пикселя и прибавления яркости следующего пикселя, который попадает в окно нового пикселя: 
	
	S(i) = S(i-1) - I(i-k/2-1) + I(i+k/2); i = 1..w-1,
	w - ширина исходного (не дополненного) и результирующего изображений.
	
	Пример (k = 5; I с отрицательными индексами - дополненные пиксели изображения):
	           0
---------------*--------------------------> X
 I(-2) I(-1) I(0) I(1) I(2) I(3) ...

|<---------- S(0) ------->|
       |<-------- S(1) ------->|
	
	Таким образом, при k > 3 число суммирований при вычислении S(i) становится сильно меньшим, чем число суммирований при наивной реализации.
--------------------------------------------------------------------------------------------
	
	БСС для двумерного изображения работает следующим образом:
1. Фильтрация первой строки результирующего изображения:
	а) Для первых k строк дополненного изображения вычисляются суммы яркостей пикселей алгоритмом оптимизированного накопления сумм, изложенным выше; накопленные суммы сохраняются в буфер размером kxw элементов.
	б) С помощью накопленных сумм вычисляются средние значения яркостей пикселей первой строки результирующего изображения.
2. Фильтрация строки Y результирующего изображения (Y = 1..w-1):
	а) Вычисление сумм яркостей пикселей алгоритмом оптимизированного накопления сумм для строки (Y+k/2) и сохранение этих сумм в буфер на место сумм строки (Y-k/2-1); старые суммы строки (Y-k/2-1) использовались для фильтрации предыдущих k строк и больше не нужны); суммы в других строках нам нужны для вычисления фильтраци строки Y - они остаются и не меняются;
	б) С помощью накопленных сумм вычисляются средние значения строки Y.
	
ЗАДАНИЕ
	Написать консольное приложение на языке программирования C++ (или модифицировать предыдущее приложение), выполняющее следующие задачи:
1. Открытие исходного изображения BMP (изображения в оттенках серого и цветные изображения);
2. Выполнение срединную фильтрацию исходного изображения методом БСС с дополнением изображения методом зеркального отражения; размеры окна фильтрации k задаются пользователем при запуске программы;
3. Замеры времени фильтрации и вывод времени в консоль (в секундах с точностью 3 знака после запятой);
4. Сохранение фильтрованного изображения в формате BMP.

РЕЗУЛЬТАТ ВЫПОЛНЕНИЯ ЗАДАНИЯ
	Задание считается выполненным, если программа выполняет поставленные перед ней задачи.

ПРИМЕЧАНИЯ
	Аналогично предыдущему заданию.
1. Дополнительное задание: научится сравнивать 2 файла с помощью стандартных средств Windows одним (или обоими) из представленных способов:
	а) побайтовое сравнение файлов;
	б) расчёт и сравнение хэшей файлов.
