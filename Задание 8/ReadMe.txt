ВВЕДЕНИЕ
	Геометрическое преобразование изображения - операция над изображением, при котором меняется форма объектов на изображении.
	Геометрическое преобразование изображения представляет собой операцию, которая устанавливает соответствие между координатами пикселей исходного изображения C=(x,y) и координатами пикселей результирующего изображения C'=(x',y'); не всегда это соответствие является взаимно однозначным.
	Для корректного выполнения геометрических преобразований необходимо рассматривать изображение не как двумерный массив пикселей (как считалось в предыдущих заданиях и часто используется в яркостных преобразованиях), а как двумерный непрерывный сигнал, заданный в следующей прямоугольной системе координат (СК) XOY:
1. Центр СК O совпадает с левым верхним углом левого верхнего пикселя изображения;
2. Ось OX является горизонтальной и направлена вправо, т.е. с её помощью указываются столбцы матрицы растра;
3. Ось OY является вертикальной и направлена вниз, т.е. с её помощью указываются строки матрицы растра;
4. Единичный отрезок обоих осей – 1 пиксель;
5. Яркость пикселя (значение сигнала) изображения является яркостью центральной точки пикселя.
	Таким образом, яркость левого верхнего пикселя в данной СК определена в точке с координатами (x;y)=(0.5,0.5), а яркость правого нижнего - в точке с координатами (x;y)=(w-1+0.5; h-1+0.5)=(w-0.5; h-0.5).
	
	Классическим примером геометрических преобразований является аффинное преобразование.
	Аффинное преобразование - преобразование, при котором на изображении сохраняются прямые линии с сохранением параллельности этих прямых. Т.е. преобразование является аффинным, если:
1. Любые 3 точки изображения, лежащие на одной прямой, будут также лежать на одной прямой после преобразования этого изображения;
2. Любые параллельные друг другу прямые на изображении после преобразования остаются параллельными друг другу.
	Из определения аффинного преобразования следует, что с помощью него можно выполнить следующие основные операции:
1. Сдвиг объектов изображения в заданную сторону (косой и прямой);
2. Масштабирование изображения до необходимого размера;
3. Поворот изображения на угол вокруг заданной точки.
	При расчётах и вычислениях, аффинное преобразование удобно представлять в матричном виде:
	C' = M * C, где
	M - матрица 3x3 прямого аффинного преобразования;
	C=(x,y,1)^T, C'=(x',y',1)^T - вектор-столбцы исходных и результирующих координат аффинного преобразования.
	Единица в C и C' необходима для поддержки операции сдвига при выполнении матричных операций.
	
	Указанное аффинное преобразование, когда по координатам исходных пикселей вычисляются координаты результирующих пикселей, называется ПРЯМЫМ [ГЕОМЕТРИЧЕСКИМ] ПРЕОБРАЗОВАНИЕМ. При выполнении этого преобразования координаты результирующих пикселей часто не будут попадать в центральную точку пикселя, которую необходимо использовать как яркость. Для вычисления яркости результирующего пикселя используются алгоритмы интерполяции (см. далее).
	На практике использование прямого преобразования бывает неудобным, поэтому чаще всего вместо него используется ОБРАТНОЕ [ГЕОМЕТРИЧЕСКОЕ] ПРЕОБРАЗОВАНИЕ, которое для заданных координат результирующих пикселей вычисляет их положение на исходном изображении:
	C = M^(-1) * C', где
	M^(-1) - матрица 3x3 обратного аффинного преобразования.
	
	Т.к. центры пикселей при проецировании с одного изображения часто не попадают в центры пикселей другого изображения, для вычисления результирующих яркостей используется усреднение яркостей исходных пикселей с известными яркостями, находящиеся вокруг спроецированного результирующего пикселя (так называемые, алгоритмы интерполяции: https://en.wikipedia.org/wiki/Interpolation).
	Основными алгоритмами интерполяции в обработке изображений являются:
1. Интерполяция по ближайшему соседу (nearest-neighbor interpolation);
2. Билинейная интерполяция (bilinear interpolation);
3. Бикубическая интерполяция (bicubic interpolation).

	Интерполяция по ближайшему соседу - в качестве яркости результирующего пикселя берётся яркость ближайшего исходного пикселя.
	Билинейная интерполяция - в качестве яркости результирующего пикселя используются яркости 4-х ближайших пикселей, усреднённых по линейному закону.
	Бикубическая интерполяция - в качестве яркости результирующего пикселя используются яркости 16-и ближайших пикселей, усреднённых по кубическому закону (полиномом третьей степени).
	
------------------------------------------
	Билинейная интерполяция при обратном преобразовании:
	+ - центры пикселей в СК XOY исходного изображения;
	(x,y) - координаты центра пикселя результирующего изображения, спроецированного на исходное изображение;
	X1,X2,Y1,Y2 - координаты центров 4-x пикселей, ближайших к (x,y);
	dx = x - X1, dy = y - Y1 - расстояния от (x,y) до центра левого верхнего пикселя из 4-x ближайших пикселей.
	
СК исходного изображения:

      0       X1    x   X2
      *-------------------> X
      |   
Y1    |       +         +       ^
      |                         |  dy
      |                         |
y     |             +           V
      |         
Y2    |       +         +
      |  
      V         dx
      Y       <----->    	
	
	Яркость результирующего пикселя при билинейной интерполяции вычисляется по следующему линейному закону:
    I(x,y) = Round[	I(X1,Y1)*(1 - dx)*(1 - dy) + 
					I(X2,Y1)*(dx)    *(1 - dy) +
					I(X1,Y2)*(1 - dx)*(dy)     +
					I(X2,Y2)*(dx)    *(dy)			]
		
	где I(,) - яркости пикселей с соответствующими координатами;
	Round[] - функция округления результата до необходимого диапазона яркостей пикселя.
------------------------------------------

ЗАДАНИЕ
	Написать консольное приложение на языке программирования C++ (или модифицировать любое из предыдущих приложений), выполняющее следующие задачи:
1. Открытие исходного изображения BMP (изображения в оттенках серого и цветные изображения); имя файла .bmp задаётся пользователем при запуске программы;
2. Формирование обратной матрицы аффинных преобразований, позволяющей масштабировать изображения, и вывод её с консоль; размеры масштабированного изображения (ширина и высота) задаются пользователем при запуске программы;
3. Масштабирование изображения методом обратного преобразования с использованием билинейной интерполяции и интерполяции по ближайшему соседу;
4. Замеры времени масштабирования для каждого типа интерполяции в отдельности и вывод времени в консоль (в секундах с точностью 3 знака после запятой);
5. Сохранение масштабированных изображений в формате BMP; имена результирующих изображений задаются как имя исходного изображения с добавлением окончаний "_scale_nn" и "_scale_bln", для ближайшего соседа и билинейной интерполяции соответственно.

РЕЗУЛЬТАТ ВЫПОЛНЕНИЯ ЗАДАНИЯ
	Задание считается выполненным, если программа выполняет поставленные перед ней задачи - выполняет масштабирование изображения, сохраняет масштабированные изображения и выводит время масштабирования.

ПРИМЕЧАНИЯ
1. Дополнительный материал можно узнать в лабораторной работе № 4 методички 3677.
2. Основные этапы работы алгоритма приложения должны выполняться следующим образом и в указанном порядке:
	а) Загрузка всего растра исходного изображения в оперативную память;
	б) Выделение памяти в оперативной памяти под растры результирующих изображений;
	в) Запуск процедуры масштабирования с одним алгоритмом интерполяции и замерами времени;
	г) Сохранение результирующего изображения;
	д) Запуск процедуры масштабирования с другим алгоритмом интерполяции и замерами времени;
	е) Сохранение другого результирующего изображения.




